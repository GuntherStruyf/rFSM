
* The rFSM Statecharts
** Introduction
   A simple example
** API
*** Basic API

    - Overview

      | function             | description                                 |
      |----------------------+---------------------------------------------|
      | =rfsm.sista:new{}=   | create a simple state                       |
      | =rfsm.csta:new{}=    | create a composite state                    |
      | =rfsm.conn:new{}=    | create a connector                          |
      | =rfsm.trans:new{}=   | create a transition                         |
      | =fsm rfsm.init(fsm)= | initialize a fsm and return initialized fsm |
      | =rfsm.step(fsm)=     | attempt to transition fsm                   |
      |                      |                                             |


*** Hooks functions
    - Overview

      | function    | description                                        |
      |-------------+----------------------------------------------------|
      | =dbg=       | will be called to output debug information         |
      | =info=      | will be called to output informational information |
      | =warn=      | will be called to output warnings                  |
      | =err=       | will be called to output errors                    |
      | =getevents= | function which returns a table of events           |
      |             |                                                    |


** More examples
** Analysing rFSM Statecharts
*** Measuring transition latencies

** Using rFSM with RTT
** Using rFSM with ROS
** Extensions
*** fsm2uml
*** fsmdbg

    Important: who wakes the rFSM when it hibernates? Various possibilites:

      - RTT triggers =updateHook()= after receiving a variable on a
        DataPort, which in turn can be used to call the fsm's =step()=
        function.

      - For debug purposes you can insert a sleep in the _idle_hook

      - 

*** fsmpp
*** fsmtesting
** Internals
